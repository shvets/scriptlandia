#
# Copyright 2002-2007 Sun Microsystems, Inc.  All rights reserved.
# SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#

################################################################
# INSTALL  TARGETS
################################################################

install:  install-build

# The generated java files are generated as a set, so instead of
# setting the INSTALL variable to that list of files, set it to
# the .PHONY target that generates the set of files.
INSTALL = install

# put the generated patch in their own place in OUTPUTDIR
INSTALL_OUTPUTDIR = $(ABS_OUTPUTDIR)

INSTALL_DEBUG_NAME=fastdebug

INSTALL_BUILD_TARGETS = sanity all
INSTALL_BUILD_ARGUMENTS = $(COMMON_BUILD_ARGUMENTS) \
			ALT_OUTPUTDIR=$(INSTALL_OUTPUTDIR) \
			ALT_RTPATCH_DIR=$(ALT_RTPATCH_DIR) \
			ALT_BASE_IMAGE_ZIP=$(ALT_BASE_IMAGE_ZIP) \
			ALT_BASE_IMAGE_DIR=$(ALT_BASE_IMAGE_DIR) \
			ALT_NEW_IMAGE_DIR=$(ALT_NEW_IMAGE_DIR) \
			ALT_BUNDLE_DATE=$(BUNDLE_DATE) \
			INSTALL_DEBUG_NAME=$(INSTALL_DEBUG_NAME)

ifeq ($(BUILD_LANGTOOLS), true)
  INSTALL_BUILD_ARGUMENTS += ALT_LANGTOOLS_DIST=$(ABS_LANGTOOLS_DIST)
endif

install: install-build

install-build:
ifeq ($(BUILD_INSTALL), true)
	($(CD) $(INSTALL_TOPDIR)/make && \
	  $(MAKE) $(INSTALL_BUILD_TARGETS) $(INSTALL_BUILD_ARGUMENTS))
endif

update-patcher:
ifeq ($(BUILD_INSTALL), true)
	if [ -r $(INSTALL_TOPDIR)/make/update/Makefile ]; then \
	  ( $(CD) $(INSTALL_TOPDIR)/make/update && \
	    $(MAKE) all $(INSTALL_BUILD_ARGUMENTS) ); \
	fi
endif

update-patchgen:
ifeq ($(BUILD_INSTALL), true)
	if [ -r $(INSTALL_TOPDIR)/make/update/Makefile ]; then \
	  ( $(CD) $(INSTALL_TOPDIR)/make/update && \
	    $(MAKE) patchgen $(INSTALL_BUILD_ARGUMENTS) ); \
	fi
endif

installer:
ifeq ($(BUILD_INSTALL), true)
	if [ -r $(INSTALL_TOPDIR)/make/installer/Makefile ]; then \
	  ( $(CD) $(INSTALL_TOPDIR)/make/installer && \
	    $(MAKE) all $(INSTALL_BUILD_ARGUMENTS) ); \
	fi
endif

install-clobber:
ifeq ($(BUILD_INSTALL), true)
	($(CD) $(INSTALL_TOPDIR)/make && \
	  $(MAKE) clobber $(INSTALL_BUILD_ARGUMENTS))
endif

install-sanity:: 
ifeq ($(BUILD_INSTALL), true)
	($(CD) $(INSTALL_TOPDIR)/make && \
	  $(MAKE) sanity $(INSTALL_BUILD_ARGUMENTS))
endif

######################################
# Rules for making the install
######################################

.PHONY: install install-build install-clobber install-sanity \
	update-installer update-patchgen installer
