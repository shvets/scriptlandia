// ProxiesXmlHelper.bsh

import org.jdom.Element;
import org.jdom.Text;
import org.jdom.JDOMException;
import org.sf.scriptlandia.util.XmlHelper;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

sourceRelative("XmlHelper.bsh");

public class ProxiesXmlHelper extends XmlHelper {
  public static final String SETTINGS_XML =
          System.getProperty("user.home") + File.separatorChar + ".m2" + File.separatorChar + "settings.xml";

  public void process(List parameters) throws IOException, JDOMException {
    Element localRepository = getLocalRepositoryElement();

    String proxyServer = System.getProperty("proxy.server.host");

    if(proxyServer != null && proxyServer.trim().length() > 0) {
      Element proxies = getProxiesElement();

      if(proxies == null) {
        proxies = new Element("proxies");

        Element root = document.getRootElement();

        int index = root.indexOf(localRepository);

        root.addContent(index+1, new Text("\n  "));
        root.addContent(index+2, new Text("\n  "));
        root.addContent(index+3, proxies);
      }

      addProxy(proxies);
    }
  }

  protected Element getLocalRepositoryElement() {
    Element root = document.getRootElement();

    return getElementByPath(root, new String[] { "localRepository" });
  }

  protected Element getProxiesElement() {
    Element root = document.getRootElement();

    return getElementByPath(root, new String[] { "proxies" });
  }

  public String getLocalRepository() {
    Element localRepositoryElement = getLocalRepositoryElement();

    if(localRepositoryElement != null) {
      return localRepositoryElement.getText();
    }

    return "";
  }

  private void addProxy(Element proxies) {
    Element proxy = new Element("proxy");

    proxies.addContent("\n    ");
    proxies.addContent(proxy);
    proxies.addContent("\n  ");

    Element active = new Element("active");
    active.setText("true");

    Element protocol = new Element("protocol");
    protocol.setText("http");

    Element username = new Element("username");
    username.setText("");

    Element password = new Element("password");
    password.setText("");

    String proxyHost = System.getProperty("proxy.server.host");
    String proxyPort = System.getProperty("proxy.server.port");

    Element port = new Element("port");
    port.setText(proxyPort);

    Element host = new Element("host");
    host.setText(proxyHost);

    Element id = new Element("id");

    proxy.addContent("\n      ");
    proxy.addContent(active);
    proxy.addContent("\n      ");
    proxy.addContent(protocol);
    proxy.addContent("\n      ");
    proxy.addContent(username);
    proxy.addContent("\n      ");
    proxy.addContent(password);
    proxy.addContent("\n      ");
    proxy.addContent(port);
    proxy.addContent("\n      ");
    proxy.addContent(host);
    proxy.addContent("\n      ");
    proxy.addContent(id);
    proxy.addContent("\n    ");
  }

  public static void main(String[] args) throws IOException, JDOMException {
    File outSettings =  new File(SETTINGS_XML);

    ProxiesXmlHelper xmlHelper = new ProxiesXmlHelper();

    if(!outSettings.exists()) {
      File inSettings =  new File("projects/scriptlandia-config/src/main/config/settings.xml");

      xmlHelper.read(inSettings);
    }
    else {
      xmlHelper.read(outSettings);
    }

    Element localRepository = xmlHelper.getLocalRepositoryElement();

    String repositoryHome = System.getProperty("repository.home");

    // set up local repository value
    localRepository.setText(repositoryHome.replace(File.separatorChar, '/'));

    xmlHelper.process(new ArrayList());

    xmlHelper.save(outSettings);
  }

}
