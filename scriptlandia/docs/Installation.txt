    Installation


1. Install Java Virtual Machine

Installation script helps depends on Java Standard Edition (version 1.5 or higher). 
Java should be installed before the installation.

2. Install JLauchPad

JLaunchPad should also be installed. If it's not installed yet, you can do it by running the
following command:

>jlaunchpad-installer.bat

But before running this command, modify the following variables inside "config.bat" ("config.sh")
file:

- "JAVA_HOME" - to point to the correct location of pre-installed Java.
- "REPOSITORY_HOME" - to point to the location of repository folder, where all additional jars 
will be stored.
- "LAUNCHER_HOME" - to point to the location where JLaunchPad will be installed.

3. Install Scriptlandia installer

Run the installation script:

>installer.bat

or

>installer.sh

Installation will as for the location of:

- Launcher Home - the location of already preinstalled JLaunchPad;

- Scriptlandia Home - the location where Scriptlandia scripts will be installed.

It also will ask for languages to be installed and proxy settings, if you are behind firewall.


The installation is completed. During the installation we associate extensions like ".ant", ".maven",
".bsh" etc. with appropriate dynamic language interpreter.

During installation, a lot of files will be downloaded and installed into local repository. 

After completing the installation, scripts can be launched from the command line, for example:

>hello.bsh

>test.ant

Scripts are located in separate "scriptlandia-examples-and-tools" archive.

If you don't want to type the extension, do the following (Windows only):

set PATHEXT=.ant;.bsh;.maven;.js;.groovy;%PATHEXT%

Now you can ivoke scripts without specifying the extension:

>hello

It is also good idea to add SCRIPTLANDIA_HOME variable to your PATH variable.

    Direct invocation of Scriptlandia script

if your operating system is not supported by deploy library, you still can use
Scriptlandia to launch your language scripts. To do it you have to call "sl.bat/sl.sh" script:

>sl.sh test.ant

or

>sl.sh hello.bsh


    Integration with Nailgun server

***
NailGun is a client, protocol, and server for running Java programs from the command line without 
incurring the JVM startup overhead. Programs run in the server (which is implemented in Java), 
and are triggered by the client (written in C), which handles all I/O.
***

You can speed-up the execution of your scripts, if JVM is in the memory all the time. Once 
you execute your scripts, required classes are loaded into memory and ready for the following 
usage.

To run the nailgun server execute this command (located in ${scriptlandia.home} folder):

>nailgun-tray.bat

New icon appears at system tray (right part of the task toolbar). Right click on it and 
execute the command: "Start Nailgun Server". Now you can execute scripts in nailgun (-ng) mode:

>Hello.bsh -ng


To stop the server, right click on the icon and then execute "Stop Nailgun Server". Now you can exit
from the tray.

If you don't want to have the server as the system tray, run this command instead:

>nailgun-server.bat


    Additional code to explore


The Scriptlandia installation has additional distribution package: "examples and tools".
It contains a lot of small examples to test supported languages. Also it contains useful 
(finished) examples that use various Java  API/frameworks/approaches.

"tools" part contains bigger examples/components that could work with Scriptlandia. From one hand, 
they are bigger than example, but from another - they are not as big as yet another
language. Plus, it requires some additional steps in order to integrate them too. For example:
jruby on rails, grails, different maven archetypes (webtide, appfuse, ...) etc.

Ubuntu

sudo apt-get install libstdc++5


>gnomevfs-info test.bsh

>sudo gedit /usr/share/mime/packages/scriptlandia.xml

>sudo update-mime-database /usr/share/mime

>gnomevfs-info test.bsh

>sudo update-desktop-database

>sudo gedit /usr/share/applications/scriptlandia.desktop

>gnomevfs-info test.bsh




>gnomevfs-info test.bsh

>gedit ~/.local/share/mime/packages/scriptlandia.xml

>update-mime-database ~/.local/share/mime

>gnomevfs-info test.bsh

>sudo update-desktop-database

>gedit ~/.local/share/applications/scriptlandia.desktop

>gnomevfs-info test.bsh


gnome-open test.bsh 
kfmclient exec test.bsh

http://portland.freedesktop.org/wiki/


JAVA_BOOTCLASSPATH_APPEND:
JAVA_BOOTCLASSPATH_PREPEND:
JAVA_BOOTCLASSPATH:
JAVA_LIBRARY_PATH:
JAVA_EXT_DIRS: -Djava.ext.dirs=/home/alex/jdk1.6.0_03/lib/ext:/home/alex/jdk1.6.0_03/jre/lib/ext
JAVA_ENDORSED_DIRS:
JVM_ARGS: -Xmx256m -Xss1024k -da
JAVA_SYSTEM_PROPS: -Dclassworlds.conf=/home/alex/launcher/classworlds.conf -Drepository.home=/media/sda2/maven-repository -Dlauncher.home=/home/alex/launcher -Dlauncher.version=1.0.1
JAVA_CLASSPATH: -classpath /media/sda2/maven-repository/classworlds/classworlds/1.1/classworlds-1.1.jar
LAUNCHER_CLASS: org.codehaus.classworlds.Launcher
COMMAND_LINE_ARGS: -deps.file.name=/media/sda2/maven-repository/org/sf/scriptlandia/scala-starter/1.0.1/scala-starter-1.0.1.pom -main.class.name=org.sf.scriptlandia.ScalaStarter2 test1.scala




JAVA_BOOTCLASSPATH_APPEND: -Xbootclasspath/a:"C:/maven-repository/org/scala-lang/scala-library/2.6.1/scala-library-2.6.1.jar"

JAVA_SYSTEM_PROPS: "-Dclassworlds.conf=C:/launcher/classworlds.conf" "-Drepository.home=C:/maven-repository" "-Dlauncher.home=C:/launcher" "-Dlauncher.version=1.0.1" "-Dclassworlds
.conf=C:/scriptlandia/classworlds.conf"

JAVA_CLASSPATH: -classpath "C:/maven-repository/classworlds/classworlds/1.1/classworlds-1.1.jar;C:/maven-repository/org/scala-lang/scala-compiler/2.6.1/scala-compiler-2.6.1.jar;C:/
maven-repository/org/scala-lang/scala-dbc/2.6.1/scala-dbc-2.6.1.jar;C:/maven-repository/org/scala-lang/scala-decoder/2.6.1/scala-decoder-2.6.1.jar"

COMMAND_LINE_ARGS:  "-deps.file.name=C:\maven-repository\org\sf\scriptlandia\scala-starter\1.0.1\scala-starter-1.0.1.pom" "-main.class.name=org.sf.scriptlandia.ScalaStarter2" "-noc
ompdaemon" "-howtorun:script" "C:\Work\Projects\scriptlandia\trunk\scriptlandia-lang-examples\scala\test1.scala"