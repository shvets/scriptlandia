<?xml version="1.0"?>

<project name="build.ant" default="build" basedir="..">

  <target name="build" depends="build.core, build.launcher">
  </target>

  <target name="build.core">
    <script language="beanshell">
      String basedir = project.getProperty("basedir");
      String repositoryHome = System.getProperty("repository.home");

      addClassPath(basedir + "/projects/scriptlandia-installer/target/scriptlandia-installer.jar");

      import org.sf.pomreader.ProjectInstaller;

      ProjectInstaller installer = new ProjectInstaller();

      File[] files = new File(basedir + "/languages").listFiles();

      for(int i=0; i &lt; files.length; i++) {
        if(!files[i].isHidden() &amp;&amp; files[i].isDirectory()) {
          String name = files[i].getName();

          if(new File(basedir + "/languages/" + name + "/core").exists()) {
            installer.install(basedir + "/languages/" + name + "/core", true);
          }
        }
      }
    </script>
  </target>

  <target name="build.launcher">
    <script language="beanshell">
      System.setProperty("java.specification.version.level", "1.5");

      String basedir = project.getProperty("basedir");
      String repositoryHome = System.getProperty("repository.home");

      File installJarFile = new File(basedir + "/projects/scriptlandia-installer/target/scriptlandia-installer.jar");

      if(!installJarFile.exists()) {
        print("Please run build.bat/build.sh for scriptlandia main project");
      }
      else {
        addClassPath(basedir + "/projects/scriptlandia-installer/target/scriptlandia-installer.jar");

        import org.sf.pomreader.ProjectInstaller;

        ProjectInstaller installer = new ProjectInstaller();

        File[] files = new File(basedir + "/languages").listFiles();

        for(int i=0; i &lt; files.length; i++) {
          if(!files[i].isHidden() &amp;&amp; files[i].isDirectory()) {
            String name = files[i].getName();

            if(new File(basedir + "/languages/" + name + "/starter").exists()) {
              installer.install(basedir + "/languages/" + name + "/starter", true);
            }
          }
        }
      }
    </script>
  </target>

  <target name="clean">
    <delete includeemptydirs="true">
      <fileset dir="languages">
        <include name="**/core/target/**"/>
        <include name="**/starter/target/**"/>
      </fileset>
    </delete>
  </target>

</project>
