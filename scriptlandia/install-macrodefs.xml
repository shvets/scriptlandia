<?xml version="1.0"?>

<project name="install-macrodefs" basedir=".">

  <macrodef name="compileProject">
    <attribute name="basedir"/>

    <attribute name="debug" default="false"/>
    <attribute name="optimize" default="false"/>
    <attribute name="deprecation" default="false"/>

    <element name="classpath-entries" optional="true"/>

    <sequential>
      <mkdir dir="@{basedir}/target/classes"/>

      <javac destdir="@{basedir}/target/classes" includeAntRuntime="false"
             debug="@{debug}" optimize="@{optimize}" deprecation ="@{deprecation}"
             source="${java.specification.version}" target="${java.specification.version}">
        <src path="@{basedir}/src/main/java"/>

        <include name ="**/*.java"/>

        <classpath>
          <classpath-entries/>
        </classpath>
      </javac>
    </sequential>
  </macrodef>

  <macrodef name="jarProject">
    <attribute name="basedir"/>
    <attribute name="name"/>

    <sequential>
      <jar destfile="@{basedir}/target/@{name}.jar">
        <fileset dir="@{basedir}/target/classes">
           <include name="**/*.class"/>
         </fileset>
       </jar>
    </sequential>
  </macrodef>

  <macrodef name="installProject">
    <attribute name="basedir"/>
    <attribute name="build" default="true"/>

    <sequential>
      <java classname="org.sf.scriptlandia.install.ProjectInstaller">
        <classpath>
          <pathelement path="projects/scriptlandia-common/target/scriptlandia-common.jar"/>
          <pathelement path="projects/bootstrap-mini/target/bootstrap-mini.jar"/>
          <pathelement path="projects/pomreader/target/pomreader.jar"/>
          <pathelement path="projects/image4j/target/image4j.jar"/>
          <pathelement path="projects/scriptlandia-installer/target/scriptlandia-installer.jar"/>
        </classpath>

        <sysproperty key="build.required" value="@{build}"/>
        <sysproperty key="basedir" value="@{basedir}"/>

        <sysproperty key="maven.repo.local" value="${repository.home}"/>

        <sysproperty key="proxy.server.host" value="${proxy.server.host}"/>
        <sysproperty key="proxy.server.port" value="${proxy.server.port}"/>
      </java>
    </sequential>
  </macrodef>

  <macrodef name="installLanguages">
    <attribute name="section"/>

    <sequential>
      <script language="beanshell">
        addClassPath("projects/classworlds-launcher/target/classworlds-launcher.jar");
        addClassPath("projects/scriptlandia-common/target/scriptlandia-common.jar");
        addClassPath("projects/bootstrap-mini/target/bootstrap-mini.jar");
        addClassPath("projects/pomreader/target/pomreader.jar");
        addClassPath("projects/image4j/target/image4j.jar");
        addClassPath("projects/scriptlandia-installer/target/scriptlandia-installer.jar");

        import org.sf.scriptlandia.install.ProjectInstaller;

        ProjectInstaller installer = new ProjectInstaller();

        File[] files = new File("languages").listFiles();

        for(int i=0; i &lt; files.length; i++) {
          if(!files[i].isHidden() &amp;&amp; files[i].isDirectory()) {
            String name = files[i].getName();

            boolean requiresInstallation = false;

            if(Boolean.valueOf(System.getProperty(name + ".install")).booleanValue()) {
              requiresInstallation = true;
            }

            if(requiresInstallation) {
              boolean compile = false;

              if(new File("languages/" + name + "/@{section}/src/main/java").exists() &amp;&amp;
                 !new File("languages/" + name + "/@{section}/target/" + name + "-@{section}.jar").exists()) {
                compile = true;
              }

              installer.install("languages/" + name + "/@{section}", compile);
            }
          }
        }
      </script>
    </sequential>
  </macrodef>

</project>
