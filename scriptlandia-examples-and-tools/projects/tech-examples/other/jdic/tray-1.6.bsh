import java.awt.AWTException;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class Tester extends JFrame {
    private Desktop desktop;
    private JTextField url = new JTextField("http://", 25);
    private TrayIcon trayIcon = null;

    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Tester t = new Tester();
                t.pack();
                t.setVisible(true);
            }
        });
    }
    
    public Tester() {
        this.setTitle("Tester");
        if (Desktop.isDesktopSupported()) {
            desktop = Desktop.getDesktop();
        }
        initComponents();
    }
    
    private void initComponents() {
        setupFrameIcon();
        setupBrowserPanel();
        setupSystemTray();
    }
    
    private void setupFrameIcon() {
        ImageIcon imgIcon = new ImageIcon("images/icon.png");
        Image img = imgIcon.getImage();
        this.setIconImage(img);
    }
    
    private void setupSystemTray() {
        if (SystemTray.isSupported()) {
            SystemTray tray = SystemTray.getSystemTray();
            Image image = Toolkit.getDefaultToolkit().getImage("images/tray.gif");
            trayIcon = new TrayIcon(image, "Tester2");
            trayIcon.setImageAutoSize(true);
            trayIcon.addActionListener(new TrayActionListener());
            try {
                tray.add(trayIcon);
            } catch (AWTException e) {
                System.err.println("TrayIcon could not be added.");
            }
        }
    }
    
    private void setupBrowserPanel() {
        JPanel p1 = new JPanel();
        p1.add(url);
        JButton b = new JButton("Browse");
        p1.add(b);
        b.addActionListener(new URLActionListener());
        this.add(p1);
    }
    
    class URLActionListener implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            String target = url.getText();
            try {
                URI uri = new URI(target);
                if (desktop != null)
                    desktop.browse(uri);
            }
            catch(IOException ioe) {
                ioe.printStackTrace();
            }
            catch(URISyntaxException use) {
                use.printStackTrace();
            }
        }
        
    }

    class TrayActionListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            System.out.println("In here");
            trayIcon.displayMessage("Tester!", 
                "Some action performed",
                TrayIcon.MessageType.INFO);
        }
    };
}