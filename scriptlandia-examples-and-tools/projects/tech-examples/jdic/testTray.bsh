//

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;

import org.jdesktop.jdic.tray.SystemTray;
import org.jdesktop.jdic.tray.TrayIcon;

JFrame popupFrame;

JPopupMenu createPopupMenu() {
  JPopupMenu menu = new JPopupMenu("Menu");

  JMenuItem menuItem1 = new JMenuItem("Menu 1");
  menuItem1.addActionListener(new ActionListener() {
    public void actionPerformed(ActionEvent e) {
      showItem1();
    }
  });

  JMenuItem menuItem2 = new JMenuItem("Menu 2");
  menuItem2.addActionListener(new ActionListener() {
    public void actionPerformed(ActionEvent e) {
      showItem2();
    }
  });

  JMenuItem menuItem3 = new JMenuItem("Exit");
  menuItem3.addActionListener(new ActionListener() {
    public void actionPerformed(ActionEvent e) {
      exit();
    }
  });

  menu.add(menuItem1);
  menu.add(menuItem2);
  menu.add(menuItem3);

  return menu;
}

TrayIcon createTrayIcon() {
  // get an ImageIcon
  ImageIcon imageIcon = new ImageIcon("images/gomustang.gif");

  // build TrayIcon
  TrayIcon trayIcon = new TrayIcon(imageIcon, "JDIC Tray Icon API Demo - TrayIcon", createPopupMenu());

  trayIcon.addActionListener(new ActionListener() {
    public void actionPerformed(ActionEvent e) {
      show();
    } 
  });

//  trayIcon.displayMessage("Scriptlandia Launching Pad", "Launching Pad is started", TrayIcon./*INFO_MESSAGE_TYPE*/NONE_MESSAGE_TYPE);

  trayIcon.setToolTip("Scriptlandia Launching Pad");

  return trayIcon;
}

void show() {
  //print("show");
  if(popupFrame == null) {
    popupFrame = new JFrame("Test");
    popupFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    JPanel panel = new JPanel();

    JLabel label = new JLabel("scriptlandia");
    panel.add(label);

    popupFrame.add(panel);
    popupFrame.pack();
    panel.validate();
  }

  if(!popupFrame.isVisible()) {
    popupFrame.setVisible(true);
  }
}

void showItem1() {
  print("show item1");
}

void showItem2() {
  print("show item2");
}

void exit() {
  System.exit(0);
}

// catch exceptions and exit, which prevents an orphaned tray icon
// that might force the user to use Task Mgr to kill the process
Thread.setDefaultUncaughtExceptionHandler(
        new Thread.UncaughtExceptionHandler() {
    public void uncaughtException(Thread t, Throwable e) {
        e.printStackTrace();
        System.exit(1);
    }
});

SwingUtilities.invokeLater(new Runnable() {
  public void run() {
    TrayIcon trayIcon = createTrayIcon();

    SystemTray systemTray = SystemTray.getDefaultSystemTray();

    systemTray.addTrayIcon(trayIcon);

  }
});


