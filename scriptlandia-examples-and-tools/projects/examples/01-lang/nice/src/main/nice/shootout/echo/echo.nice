/* The Great Computer Language Shootout 
   contributed by Isaac Gouy

   Transliterated from the Java solution

To compile:   
   nicec --sourcepath=.. -d=. -a echo.jar echo

To run:
   java -jar echo.jar 100000
*/


import java.io.*;
import java.net.*;

import ackermann; // reuse toSinglePositiveInt

void main(String[] args){
   let n = toSinglePositiveInt(args); 
   let server = new EchoServer(port: 0);
   let client = new EchoClient( 
      address: InetAddress.getLocalHost(),  
      port: server.getPort, 
      repeat: n
   );
   client.start;
}


let int BUFFER_SIZE = 1024;

class EchoServer extends Thread {
   ?ServerSocket socket = null;
   int port;
   
   {  // initializer
      socket = new ServerSocket(port);
      port = notNull(socket).getLocalPort;
      this.start;
   }

   int getPort(); getPort() = port;

   run() {
      let buffer = new byte[BUFFER_SIZE];
      try {
         let socketClient = notNull(socket).accept;
         let in = socketClient.getInputStream;
         let out = socketClient.getOutputStream;

         var count = 0, length = 0;
         while ((length = in.read(buffer)) != -1) {
            out.write(buffer, 0, length);
            out.flush;
            count += length;
         }
         println("server processed " + count + " bytes");   
            
      } catch (Exception e) {
         e.printStackTrace;
      }
   }

}


let String GREETING = "Hello there sailor\n";

class EchoClient extends Thread {
   InetAddress address;
   int port;
   int repeat;

   run() {
      var ?Socket serverSocket = null;
      try {
         let socket = new Socket(address, port);
         serverSocket = socket;
         
         let in = new BufferedReader(new InputStreamReader(socket.getInputStream));
         let out = socket.getOutputStream;
         let greetingBytes = GREETING.getBytes;
            // readLine will disgard '\n' so disgard it from the test string
         let greeting = GREETING.trim; 
         
         var ?String received;
         while (repeat-- > 0) {
            out.write(greetingBytes);
            out.flush;
            received = in.readLine;
            
            if (! received.equals(greeting))
               throw new RuntimeException(
                  "client: \"" + received + "\" != \"" + greeting  + "\"");
         }
                  
      } catch (Exception e) {
         e.printStackTrace;
      } finally {
         notNull(serverSocket).close;
      }
   }

}