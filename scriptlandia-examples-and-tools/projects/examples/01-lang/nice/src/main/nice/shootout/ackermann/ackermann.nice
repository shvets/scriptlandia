/* The Great Computer Language Shootout 
   contributed by Isaac Gouy

To compile:	
   nicec --sourcepath=.. -d=. -a ackermann.jar ackermann

To run:
   java -ea -jar ackermann.jar 8
*/


void main(String[] args){
   let n = toSinglePositiveInt(args);   
   println("Ack(3," + n + "): " + ack(3,n)); 
}


int ack(int m, int n) 
   requires m >= 0 && n >= 0; // precondition

ack(m,n) {
   if (m == 0) return n + 1;
   if (n == 0) return ack(m-1, 1);
   return ack(m-1, ack(m, n-1)); 
}


int toSinglePositiveInt(String[] s) 
   ensures result > 0; // postcondition

toSinglePositiveInt(s){
   try { 
      int i =  Integer.parseInt(s[0]);
      if (i>0) return i; else return 1;
    }
   catch (Exception e){ return 1; } }